paths:
    /v1/api/comment/{postId}:
        post:
            tags:
                - Comments
            summary: a user can comment on a post
            description: 'create a comment'
            operationId: createComment
            parameters:
                - in: path
                  name: postId
                  required: true
                  schema:
                      type: string
            security:
                - bearerAuth: []
            requestBody:
                description: content to post
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Comment'
            responses:
                '201':
                    description: created Successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/response/Comment'
                '400':
                    description: Bad request Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        get:
            tags:
                - Comments
            summary: get all comment belonging to a post
            description: 'get all post comment'
            operationId: getAllPostComment
            parameters:
                - in: path
                  name: postId
                  required: true
                  schema:
                      type: string
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: Get all comment
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/response/Post'
                '400':
                    description: Bad request Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /v1/api/comment/{commentId}/comment:
        get:
            tags:
                - Comments
            summary: get a single post by id
            description: 'get a post'
            operationId: getSinglePost
            parameters:
                - in: path
                  name: commentId
                  required: true
                  schema:
                      type: string
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: Get a single post
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/response/Post'
                '400':
                    description: Bad request Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /v1/api/comment/{commentId}/update:
        put:
            tags:
                - Comments
            summary: a user can update a comment
            description: 'update a comment'
            operationId: updateComment
            parameters:
                - in: path
                  name: commentId # Note the name is the same as in the path
                  required: true
                  schema:
                      type: string
            security:
                - bearerAuth: []
            requestBody:
                description: content to post
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Comment'
            responses:
                '200':
                    description: update Successful
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/response/Comment'
                '400':
                    description: Bad request Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /v1/api/comment/{commentId}/delete:
        delete:
            tags:
                - Comments
            summary: delete comment
            description: 'delete a comment'
            operationId: deleteComment
            parameters:
                - in: path
                  name: commentId # Note the name is the same as in the path
                  required: true
                  schema:
                      type: string
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: delete Successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/response/Comment'
                '400':
                    description: Bad request Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
components:
    response:
        Comment:
            type: object
            required:
                - content
                - createdAt
                - postId
                - userId
                - updatedAt
            properties:
                content:
                    type: string
                createdAt:
                    type: string
                postId:
                    type: string
                userId:
                    type: object
                updatedAt:
                    type: string

    schemas:
        Comment:
            type: object
            properties:
                content:
                    type: string
                    example: i am a new comment
        Error:
            type: object
            properties:
                message:
                    type: string
                    example: error message
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
